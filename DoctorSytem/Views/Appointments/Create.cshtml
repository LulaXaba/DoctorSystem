@model DoctorSystem.Models.ViewModels.AppointmentViewModel

@{
    ViewData["Title"] = "Book Appointment";
}

<div class="container mt-4">
    <h2>Book an Appointment</h2>
    <hr />

    <form asp-action="Create" method="post" id="appointmentForm">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="@Model.Department" class="control-label">Department</label>
                    <select asp-for="@Model.Department" class="form-select">
                        <option value="">Select Department</option>
                        <option value="General">General Medicine</option>
                        <option value="Cardiology">Cardiology</option>
                        <option value="Dermatology">Dermatology</option>
                        <option value="Neurology">Neurology</option>
                        <option value="Pediatrics">Pediatrics</option>
                    </select>
                    <span asp-validation-for="@Model.Department" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="@Model.StartDate" class="control-label">Appointment Date</label>
                    <input asp-for="@Model.StartDate" class="form-control" type="date" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="@Model.StartDate" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="@Model.StartTime" class="control-label">Start Time</label>
                    <select asp-for="@Model.StartTime" class="form-select" id="startTime">
                        @foreach (var slot in Model.AvailableTimeSlots)
                        {
                            <option value="@slot">@slot.ToString(@"hh\:mm")</option>
                        }
                    </select>
                    <span asp-validation-for="@Model.StartTime" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="@Model.EndTime" class="control-label">End Time</label>
                    <select asp-for="@Model.EndTime" class="form-select" id="endTime">
                        @foreach (var slot in Model.AvailableTimeSlots)
                        {
                            <option value="@slot">@slot.ToString(@"hh\:mm")</option>
                        }
                    </select>
                    <span asp-validation-for="@Model.EndTime" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label class="control-label">Select Doctor (Max 3)</label>
                    <div class="list-group" id="doctorList">
                        @foreach (var doctor in Model.ProviderList)
                        {
                            <label class="list-group-item">
                                <input type="checkbox" name="SelectedDoctors" value="@doctor.Id" class="form-check-input me-1 doctor-checkbox" />
                                @doctor.FullName
                            </label>
                        }
                    </div>
                    <span asp-validation-for="@Model.SelectedDoctors" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="@Model.Description" class="control-label">Additional Notes</label>
                    <textarea asp-for="@Model.Description" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="@Model.Description" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="form-group mt-4">
            <button type="submit" class="btn btn-primary">Book Appointment</button>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            const MAX_DOCTORS = 3;
            const doctorCheckboxes = $('.doctor-checkbox');
            const startTimeSelect = $('#startTime');
            const endTimeSelect = $('#endTime');

            // Doctor selection limit
            doctorCheckboxes.on('change', function() {
                const checkedCount = doctorCheckboxes.filter(':checked').length;
                if (checkedCount >= MAX_DOCTORS) {
                    doctorCheckboxes.not(':checked').prop('disabled', true);
                } else {
                    doctorCheckboxes.prop('disabled', false);
                }
            });

            // Time validation
            function validateTimes() {
                const startTime = new Date(`2000-01-01T${startTimeSelect.val()}`);
                const endTime = new Date(`2000-01-01T${endTimeSelect.val()}`);
                
                if (endTime <= startTime) {
                    endTimeSelect[0].setCustomValidity('End time must be after start time');
                } else {
                    endTimeSelect[0].setCustomValidity('');
                }
            }

            startTimeSelect.on('change', validateTimes);
            endTimeSelect.on('change', validateTimes);

            // Form submission validation
            $('#appointmentForm').on('submit', function(e) {
                const checkedDoctors = doctorCheckboxes.filter(':checked').length;
                if (checkedDoctors === 0) {
                    e.preventDefault();
                    alert('Please select at least one doctor.');
                    return false;
                }
                if (checkedDoctors > MAX_DOCTORS) {
                    e.preventDefault();
                    alert(`You can select a maximum of ${MAX_DOCTORS} doctors.`);
                    return false;
                }
                validateTimes();
            });
        });
    </script>
}
