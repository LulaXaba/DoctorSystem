@model List<DoctorSystem.Models.Appointment>

@{
    ViewData["Title"] = "My Appointments";
}

<div class="container mt-4">
    <h2>My Appointments</h2>
    <hr />

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            You don't have any appointments yet.
            <a asp-action="Create" class="alert-link">Book an appointment</a>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var appointment in Model)
            {
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">@appointment.Department</h5>
                            <div>
                                @if (appointment.CheckedInAt != null)
                                {
                                    <span class="badge bg-success me-2">Checked In</span>
                                }
                                <span class="badge @GetStatusBadgeClass(appointment.Status)">
                                    @appointment.Status
                                </span>
                            </div>
                        </div>
                        <div class="card-body">
                            <dl class="row mb-0">
                                <dt class="col-sm-4">Date</dt>
                                <dd class="col-sm-8">@appointment.StartTime.ToShortDateString()</dd>

                                <dt class="col-sm-4">Time</dt>
                                <dd class="col-sm-8">@appointment.StartTime.ToString("HH:mm") - @appointment.EndTime.ToString("HH:mm")</dd>

                                <dt class="col-sm-4">Doctor</dt>
                                <dd class="col-sm-8">@appointment.Doctor?.FullName</dd>

                                @if (!string.IsNullOrEmpty(appointment.Notes))
                                {
                                    <dt class="col-sm-4">Notes</dt>
                                    <dd class="col-sm-8">@appointment.Notes</dd>
                                }

                                @if (appointment.CheckedInAt != null)
                                {
                                    <dt class="col-sm-4">Checked In</dt>
                                    <dd class="col-sm-8">@appointment.CheckedInAt.Value.ToString("HH:mm")</dd>
                                }

                                @if (appointment.Status == DoctorSystem.Models.AppointmentStatus.Cancelled && !string.IsNullOrEmpty(appointment.CancellationReason))
                                {
                                    <dt class="col-sm-4">Cancellation Reason</dt>
                                    <dd class="col-sm-8">@appointment.CancellationReason</dd>
                                }
                            </dl>
                        </div>
                        <div class="card-footer">
                            @if (appointment.Status == DoctorSystem.Models.AppointmentStatus.Scheduled)
                            {
                                if (appointment.StartTime.Date == DateTime.Today && appointment.CheckedInAt == null)
                                {
                                    <form asp-action="CheckIn" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="AppointmentId" value="@appointment.Id" />
                                        <button type="submit" class="btn btn-success me-2">
                                            <i class="fas fa-check"></i> Check In
                                        </button>
                                    </form>
                                }
                                <button type="button" class="btn btn-danger" onclick="confirmCancellation(@appointment.Id)">
                                    <i class="fas fa-times"></i> Cancel
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <div class="mt-4">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Book New Appointment
        </a>
    </div>
</div>

<!-- Cancellation Confirmation Modal -->
<div class="modal fade" id="cancellationModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cancel Appointment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to cancel this appointment?</p>
                <form asp-action="Cancel" method="post" id="cancellationForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="AppointmentId" id="cancellationAppointmentId" />
                    <div class="form-group">
                        <label for="cancellationReason" class="form-label">Reason for Cancellation</label>
                        <textarea name="CancellationReason" id="cancellationReason" class="form-control" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" form="cancellationForm" class="btn btn-danger">Confirm Cancellation</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmCancellation(appointmentId) {
            document.getElementById('cancellationAppointmentId').value = appointmentId;
            new bootstrap.Modal(document.getElementById('cancellationModal')).show();
        }
    </script>
}

@functions {
    string GetStatusBadgeClass(DoctorSystem.Models.AppointmentStatus status) => status switch
    {
        DoctorSystem.Models.AppointmentStatus.Scheduled => "bg-primary",
        DoctorSystem.Models.AppointmentStatus.Completed => "bg-success",
        DoctorSystem.Models.AppointmentStatus.Cancelled => "bg-danger",
        _ => "bg-secondary"
    };
} 